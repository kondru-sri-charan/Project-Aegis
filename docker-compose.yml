version: '3.8'

services:
  # 1. PostgreSQL Database Service
  db:
    image: postgres:15
    container_name: aegis-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: aegis
    ports:
      - "5432:5432"
    volumes:
      - aegis-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aegis"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. Redis Cache Service
  redis:
    image: redis:7
    container_name: aegis-redis
    ports:
      - "6379:6379"
    volumes:
      - aegis-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3. Aegis Spring Boot Application Service
  app:
    build: . # Tells Compose to build the image from the Dockerfile in the current directory
    container_name: aegis-app
    depends_on:
      db:
        condition: service_healthy # Waits for the db healthcheck to pass
      redis:
        condition: service_healthy # Waits for the redis healthcheck to pass
    ports:
      - "8080:8080" # Expose 8080 for Nginx to connect to
    environment:
      # These environment variables override application.properties
      # The hostnames 'db' and 'redis' are the service names defined in this file
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/aegis
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

  # 4. Nginx Reverse Proxy Service (Public Entrypoint)
  nginx:
    image: nginx:latest
    container_name: aegis-nginx
    ports:
      - "80:80" # Public traffic comes in on port 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

# Define the named volumes for data persistence
volumes:
  aegis-db-data:
  aegis-redis-data: